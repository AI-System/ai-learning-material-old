# while 循环

### 循环输出 1~10

'''
i=1
while i<=10:
  print(i) # 循环的内容
  i+=1 
'''
### 倒着循环输出 1~10

'''
i=10
while i>=1:
  print(i, end=" ") # end 参数不换行
  i-=1
'''

### 计算 1 ~ 100 的累加操作

'''
i=1
sum=0
while i<=100:
  sum+=i
  i+=1
print(sum) # 5050
'''

### 死循环的使用

'''
while True:
  k=input('请输入值：')
  print('内容：', k)
  # 跳出死循环
  if k=='q':
    print('跳出了循环，谢谢！')
    break
'''

# for in 循环遍历容器类数据： 字符串，数组，元组，字典，集合

### 遍历字符串

'''
for c in 'abcd':
  print(c)

'''

### 遍历列表

'''
for i in [1,2,3,4]:
  print(i)
'''

### 遍历元组

'''
for i in (1,2,3,4):
  print(i)
'''


### 遍历集合

'''
for i in {1,2,3,4}:
  print(i)
'''

### 遍历字典

'''
a = {'k1':'v1', 'k2':'v2'}
for i in a:
  print(i, ":", a[i]) # 其中 i 是 key , 后面 a[i] 是 value

'''

### 遍历嵌套的数据结构 有规律

'''
a=[('a','AAA'), ('b', 'BBB'), ('c', 'CCC')]

for v1,v2 in a:
  print(v1, ' => ', v2) # v1 是 元组中第一项， v2 是 元组中第二项
'''

# 使用 for range 遍历递增的数据

### 输出 0 ~ 9, 注意range内 含左不含右

'''
for i in range(10):
  print(i, end=" ") 

'''

### 循环输出 2 ~ 6

'''
for i in range (2, 7):
  print(i, end=" ")
'''

### 循环输出 0 ~ 50 递增5输出 第三个参数 控制 步长 step

'''
for i in range (0, 51, 5):
  print(i, end=" ")
'''

### 输出 10 ~ 1 的值

'''
for i in range (10, 0, -1):
  print(i, end=" ")
'''

### 使用range和len结合遍历输出容器类数据

'''
a = ['aa', 'bb', 'cc']
for i in range(len(a)):
  print(i, '=>', a[i])
'''

####  直接也可以操作

'''
a = ['aa', 'bb', 'cc']
for i in a:
  print(i, end=" ")
'''

### 9*9 乘法表的处理

#### 循环输出1~9 9行

'''
for j in range(1, 10):
    for i in range(1, 10):
      print(i, end=" ")
    print() # 换行
'''


'''
1 2 3 4 5 6 7 8 9
1 2 3 4 5 6 7 8 9
1 2 3 4 5 6 7 8 9
1 2 3 4 5 6 7 8 9
1 2 3 4 5 6 7 8 9
1 2 3 4 5 6 7 8 9
1 2 3 4 5 6 7 8 9
1 2 3 4 5 6 7 8 9
1 2 3 4 5 6 7 8 9
'''

#### 循环输出1~9 9行 每行只输出一个三角形

'''
for j in range(1, 10):
    for i in range(1, j+1):
      print(i, end=" ")
    print() # 换行
'''

'''
1
1 2
1 2 3
1 2 3 4
1 2 3 4 5
1 2 3 4 5 6
1 2 3 4 5 6 7
1 2 3 4 5 6 7 8
1 2 3 4 5 6 7 8 9
'''

#### 输出 9*9 乘法表

'''
for j in range(1, 10):
    for i in range(1, j+1):
      print("{} * {} = {:<4}".format(i, j, i*j), end=" ")
    print() # 换行
'''

'''
1 * 1 = 1
1 * 2 = 2    2 * 2 = 4
1 * 3 = 3    2 * 3 = 6    3 * 3 = 9
1 * 4 = 4    2 * 4 = 8    3 * 4 = 12   4 * 4 = 16
1 * 5 = 5    2 * 5 = 10   3 * 5 = 15   4 * 5 = 20   5 * 5 = 25
1 * 6 = 6    2 * 6 = 12   3 * 6 = 18   4 * 6 = 24   5 * 6 = 30   6 * 6 = 36
1 * 7 = 7    2 * 7 = 14   3 * 7 = 21   4 * 7 = 28   5 * 7 = 35   6 * 7 = 42   7 * 7 = 49
1 * 8 = 8    2 * 8 = 16   3 * 8 = 24   4 * 8 = 32   5 * 8 = 40   6 * 8 = 48   7 * 8 = 56   8 * 8 = 64
1 * 9 = 9    2 * 9 = 18   3 * 9 = 27   4 * 9 = 36   5 * 9 = 45   6 * 9 = 54   7 * 9 = 63   8 * 9 = 72   9 * 9 = 81

'''


#### 更形成三角形

'''
for j in range(1, 10):
    for i in range(1, j+1):
      print("{} * {} = {:<4}".format(i, j, i*j), end=" ")
    print() # 换行

print() 

for j in range(9, 0, -1):
    for i in range(1, j+1):
      print("{} * {} = {:<4}".format(i, j, i*j), end=" ")
    print() # 换行

'''

'''

1 * 1 = 1
1 * 2 = 2    2 * 2 = 4
1 * 3 = 3    2 * 3 = 6    3 * 3 = 9
1 * 4 = 4    2 * 4 = 8    3 * 4 = 12   4 * 4 = 16
1 * 5 = 5    2 * 5 = 10   3 * 5 = 15   4 * 5 = 20   5 * 5 = 25
1 * 6 = 6    2 * 6 = 12   3 * 6 = 18   4 * 6 = 24   5 * 6 = 30   6 * 6 = 36
1 * 7 = 7    2 * 7 = 14   3 * 7 = 21   4 * 7 = 28   5 * 7 = 35   6 * 7 = 42   7 * 7 = 49
1 * 8 = 8    2 * 8 = 16   3 * 8 = 24   4 * 8 = 32   5 * 8 = 40   6 * 8 = 48   7 * 8 = 56   8 * 8 = 64
1 * 9 = 9    2 * 9 = 18   3 * 9 = 27   4 * 9 = 36   5 * 9 = 45   6 * 9 = 54   7 * 9 = 63   8 * 9 = 72   9 * 9 = 81

1 * 9 = 9    2 * 9 = 18   3 * 9 = 27   4 * 9 = 36   5 * 9 = 45   6 * 9 = 54   7 * 9 = 63   8 * 9 = 72   9 * 9 = 81
1 * 8 = 8    2 * 8 = 16   3 * 8 = 24   4 * 8 = 32   5 * 8 = 40   6 * 8 = 48   7 * 8 = 56   8 * 8 = 64
1 * 7 = 7    2 * 7 = 14   3 * 7 = 21   4 * 7 = 28   5 * 7 = 35   6 * 7 = 42   7 * 7 = 49
1 * 6 = 6    2 * 6 = 12   3 * 6 = 18   4 * 6 = 24   5 * 6 = 30   6 * 6 = 36
1 * 5 = 5    2 * 5 = 10   3 * 5 = 15   4 * 5 = 20   5 * 5 = 25
1 * 4 = 4    2 * 4 = 8    3 * 4 = 12   4 * 4 = 16
1 * 3 = 3    2 * 3 = 6    3 * 3 = 9
1 * 2 = 2    2 * 2 = 4
1 * 1 = 1

'''

### 使用while循环来操作

'''
j=1
while j<=9:
  i=1
  while i<=j:
    print("{} * {} = {:<4}".format(i, j, i*j), end=" ")
    i+=1;
  print()
  j+=1

'''

'''
1 * 1 = 1
1 * 2 = 2    2 * 2 = 4
1 * 3 = 3    2 * 3 = 6    3 * 3 = 9
1 * 4 = 4    2 * 4 = 8    3 * 4 = 12   4 * 4 = 16
1 * 5 = 5    2 * 5 = 10   3 * 5 = 15   4 * 5 = 20   5 * 5 = 25
1 * 6 = 6    2 * 6 = 12   3 * 6 = 18   4 * 6 = 24   5 * 6 = 30   6 * 6 = 36
1 * 7 = 7    2 * 7 = 14   3 * 7 = 21   4 * 7 = 28   5 * 7 = 35   6 * 7 = 42   7 * 7 = 49
1 * 8 = 8    2 * 8 = 16   3 * 8 = 24   4 * 8 = 32   5 * 8 = 40   6 * 8 = 48   7 * 8 = 56   8 * 8 = 64
1 * 9 = 9    2 * 9 = 18   3 * 9 = 27   4 * 9 = 36   5 * 9 = 45   6 * 9 = 54   7 * 9 = 63   8 * 9 = 72   9 * 9 = 81

'''


# break 、 continue 、 else 、 pass 的使用

#### 输出0~9的值 break 跳出循环

'''
for i in range(10):
  if i==6:
    break # 跳出整个循环 
  print(i, end="") # 只输出 0 ~ 5
'''

#### 输出0~9的值 continue 跳出某次循环

'''
for i in range(10):
  if i==6:
    continue # 跳出循环 输出 0 ~5 和 7 ~ 9 不含有 6
  print(i, end="")
'''

#### break 用于数据查找

'''
a = [1, 2, 3, 4]
m = 1
for i in a:
  if m == i:
    print('exist')
    break
else: # 注意这个else和 for 对齐
  print('no exist')

'''

### 使用pass占位

'''
a = [1, 2, 3, 4]

for i in a:
  pass # 空语句 不会报错
'''