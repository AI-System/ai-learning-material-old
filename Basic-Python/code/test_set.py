'''
集合 set 是一个无序不重复的元素的序列。
基本用途：进行成员关系测试和删除重复元素。

创建： 1. 使用{} 或 set() 函数创建集合， 注意：创建一个空集合必须set() 而不是 {}, 因为 {} 是用来创建一个空字典。

集合之间可以进行：
- 差集
& 交集
| 并集
^ 反交集

举例：
a={10,20,30}
type(a) # <class 'set'>
b={30,40,50,40}
print(b) # {40,50,30} 去除了重复的40

集合取值不能切片取值
b[0] # 报错

# 计算
print(a&b) # {30} 取交集
print(a-b) # {10, 20} 从a中去除和b中相同的元素剩余组成一个新的set
print(b-a) # {40,50}
print(a|b) # {50, 20, 40, 10, 30}

'''

### 集合的创建方式

'''
s1 = {1,2,3}
s2 = set({1,2,3})
s1 # {1, 2, 3}
s2 # {1, 2, 3}
'''

### 集合添加 add 一个值

'''
a={1,2}
a.add(3)
a # {1,2,3}
'''

### 集合添加 update 多个值 update 的参数是列表或者元组或集合

'''
a={1,2}
a.update([3,4,6]) # a.update({3,4,6}) 或 a.update((3,4,6))
a # {1,2,3,4,6} 
'''

### 删除集合 remove 

'''
a={1,2}
a.remove(1) # 如果删除某个不存在的元素，那么会报错
a # {2}
'''

### 删除集合 discard 

a={1,2}
a.discard(1) # 如果删除元素，不存在不会报错
a # {2}

### 集合遍历 只有 for in

'''
a={1,2,3,4}
for i in a:
  print(i)
'''

### 成员运算符

'''
in 、 not in
'''

### 清空集合 clear

'''
a={1,2,3}
a.clear()
a # set()
'''

### 拷贝集合 copy

'''
a={1,2,3} 
b=a.copy()
a # {1, 2, 3}
b # {1, 2, 3}
id(a) == id(b) # False
'''
